/********************************************************************************
    2011-12-01
    ODLP PUMPTOWER
    Richen  E-mail: marchen@orientech.cc
    Assemble parts to pumptower
    Orientech Shanghai, All Rights Reserved.
*******************************************************************************/
user_attrib
P_ASM_TIME:real

EXTERN
get_asm_name_of_key:routine :string
short_name_of_key:routine :string
Current_Process_num:integer

procedure P_PumpTower_Asm_In_Buf_proc()
var
num_passed  : Integer
load_proc   : Process
the_part,container_part,the_tower   : part
expected_cnt, P_display_idx, ii : Integer
the_buf : element
tower_cls:part_class
part_key_str:string
begin
    -- If there are no parts in the Element do the requirement in
    -- IDLE_IDLE state, else do it in BUSY_PROCESSING state
    if( celem->num_parts > 0 ) then
        require part ANY in state BUSY_PROCESSING
    else
        require part ANY in state IDLE_IDLE
    endif

    if( celem->class->load_process <> NULL ) then
        load_proc = do_load_process( )
        if (load_proc == NULL) then
            --
            -- No pass till load process pre_req are available
            --
            return
        endif
    endif
    tower_cls = get_part_class('PumpTower')
    the_part = cpart
    if(the_part->pclass == tower_cls)then
        
    endif
    celem->QTY = celem->QTY + the_part->QTY
    wait until (sim_time > celem->P_ASM_TIME) frequency 600
    if(celem->QTY >= celem->total_cnt)then
        --write(celem->KEY,'  ',celem->QTY ,'  ', celem->total_cnt,cr)
        for ii = celem->num_in_parts to 1 by -1 do
            the_part = celem->in_parts[ii]
            --write(sim_time,'  ',the_part->KEY,cr)
            destroy(the_part)
        endfor
        part_key_str = short_name_of_key(celem->KEY)
        open file 'D:\\deneb\\ODLP\\OUTPUT\\PumpTower\\P_PumpTower_Proc.txt' for text append as 1
        write(#1,sim_time,'\t',celem->PLAN_SN,'\t',part_key_str,'\tStarted','\t',celem->name,cr)
        close #1 
        P_display_idx = val(rightstr(part_key_str,(len(part_key_str)-1)))
        write(P_display_idx,cr)
        the_tower = produce(tower_cls,P_display_idx)
        the_tower->PLAN_SN = celem->PLAN_SN
        the_tower->KEY = celem->KEY
        the_tower->QTY = celem->QTY
        celem->QTY = 0
        
    endif
End
