/********************************************************************************
    2011-12-01
    ODLP PUMPTOWER
    Richen  E-mail: marchen@orientech.cc
    Read cycle process time by file based.
    Orientech Shanghai, All Rights Reserved.
*******************************************************************************/

extern
	 short_name_of_key          :routine:string

routine P_PumTower_Asm_Process_Cycle_Time():real
var
the_part :part
file_path:string
my_line:String
proc_str:String
key_str:string
qty_val:integer
line_num,ii:integer
P_proc_cycle_time:real
begin
    the_part = celem->in_parts[1]
    key_str = the_part->KEY
    file_path = '..\\ODLP\\DATA\\ASM\\PumpTower\\process_list.txt'
    open file file_path for text input as 6
    read_line(#6, my_line)
    scan_str(my_line, "\t, ",line_num)
    for ii = 1 to line_num do
        read_line(#6, my_line)
        scan_str(my_line, "\t, ",proc_str,P_proc_cycle_time)
        if(proc_str==short_name_of_key(key_str))then
            close #6
            return P_proc_cycle_time
        endif
    endfor
    close #6
    return 0
end


routine P_Cutting_Process_Time():real
var
the_part :part
file_path:string
my_line:String
proc_str:String
qty_val:integer
line_num,ii:integer
P_proc_cycle_time:real
begin
    
    the_part = celem->in_parts[1]
    file_path = '..\\ODLP\\DATA\\ASM\\PumpTower\\tube_process_list.txt'
    open file file_path for text input as 6
    read_line(#6, my_line)
    scan_str(my_line, "\t, ",line_num)
    for ii = 1 to line_num do
        read_line(#6, my_line)
        scan_str(my_line, "\t, ",proc_str,P_proc_cycle_time)
        if(proc_str==celem->curr_proc->name)then
            close #6
            P_proc_cycle_time = P_proc_cycle_time * the_part->QTY
            --write(proc_str,'  ',P_proc_cycle_time,cr)
            if(the_part->Diameter< 200)then
                P_proc_cycle_time = P_proc_cycle_time * 0.8
            endif
            return P_proc_cycle_time
        endif
    endfor
    close #6
    return 0
end

routine P_Boring_Process_Time():real
var
the_part :part
file_path:string
my_line:String
proc_str:String
qty_val:integer
line_num,ii:integer
P_proc_cycle_time:real
begin
    the_part = celem->in_parts[1]
    file_path = '..\\ODLP\\DATA\\ASM\\PumpTower\\tube_process_list.txt'
    open file file_path for text input as 6
    read_line(#6, my_line)
    scan_str(my_line, "\t, ",line_num)
    for ii = 1 to line_num do
        read_line(#6, my_line)
        scan_str(my_line, "\t, ",proc_str,P_proc_cycle_time)
        if(proc_str==celem->curr_proc->name)then
            close #6
            --write(proc_str,'  ',P_proc_cycle_time,cr)
            if(the_part->Diameter< 200)then
                P_proc_cycle_time = P_proc_cycle_time * 0.8
            endif
            return P_proc_cycle_time
        endif
    endfor
    close #6
    return 0
end


routine P_Tube_Asm_Process_Time():real
var
the_part :part
file_path:string
my_line:String
proc_str:String
qty_val:integer
line_num,ii:integer
P_proc_cycle_time:real
begin
    --write(celem->curr_proc->name,cr)
    the_part = celem->in_parts[1]
    file_path = '..\\ODLP\\DATA\\ASM\\PumpTower\\tube_process_list.txt'
    open file file_path for text input as 6
    read_line(#6, my_line)
    scan_str(my_line, "\t, ",line_num)
    for ii = 1 to line_num do
        read_line(#6, my_line)
        scan_str(my_line, "\t, ",proc_str,P_proc_cycle_time)
        if(proc_str==celem->curr_proc->name)then
            close #6
            if(proc_str == celem->curr_proc->name)then
                P_proc_cycle_time = P_proc_cycle_time * (the_part->QTY - 1)
            endif
            --write(proc_str,'  ',P_proc_cycle_time,cr)
            if(the_part->Diameter< 200)then
                P_proc_cycle_time = P_proc_cycle_time * 0.8
            endif
            return P_proc_cycle_time
        endif
    endfor
    close #6
    return 0
end

routine P_CRN_Unload_Process_Time():real
var
    the_part:part
    my_line:String
    tmp,key_str:String
    P_cycle_time:integer
    line_num,ii:integer
    file_path:string
begin
    the_part = celem->out_parts[1]
    file_path = '..\\ODLP\\DATA\\ASM\\PumpTower\\unload_process_list.txt'
    open file file_path for text input as 1
    read_line(#1, my_line)
    scan_str(my_line, "\t, ",line_num)
    for ii = 1 to line_num do
        read_line(#1, my_line)
        scan_str(my_line, "\t, ",key_str,P_cycle_time)
        if(key_str==short_name_of_key(the_part->KEY))then
            break
        endif
        P_cycle_time = 0
    endfor
    close #1
    -- write(short_name_of_key(the_part->KEY),'  ',P_cycle_time,cr)
    return P_cycle_time
end